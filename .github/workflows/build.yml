name: Build Application

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          pip install torch --index-url https://download.pytorch.org/whl/cpu
          
      - name: Download FFmpeg
        shell: pwsh
        run: |
          Remove-Item -Path ffmpeg -Recurse -Force -ErrorAction SilentlyContinue
          mkdir ffmpeg
          echo "Downloading FFmpeg..."
          Invoke-WebRequest https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl.zip -OutFile ffmpeg.zip
          Expand-Archive ffmpeg.zip -DestinationPath .
          Move-Item -Force ffmpeg-master-latest-win64-gpl\bin\ffmpeg.exe ffmpeg\
          Move-Item -Force ffmpeg-master-latest-win64-gpl\bin\ffprobe.exe ffmpeg\
          Remove-Item -Path ffmpeg.zip -Force
          Remove-Item -Path ffmpeg-master-latest-win64-gpl -Recurse -Force
          
      - name: Install NSIS
        shell: pwsh
        run: |
          echo "Downloading NSIS..."
          curl.exe -L "https://netcologne.dl.sourceforge.net/project/nsis/NSIS%203/3.08/nsis-3.08-setup.exe" -o nsis-setup.exe
          if (Test-Path "nsis-setup.exe") {
            echo "Installing NSIS..."
            Start-Process -FilePath .\nsis-setup.exe -ArgumentList '/S' -Wait -NoNewWindow
            Start-Sleep -s 15
          }
          
      - name: Build Windows executable
        shell: cmd
        run: build_windows.bat
          
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: "Sound to XML Converter v${{ github.ref_name }}"
          body: "Release version ${{ github.ref_name }}"
          draft: false
          prerelease: false
          files: "Sound to XML Installer.exe"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
name: Build Application

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller
          pip install torch --index-url https://download.pytorch.org/whl/cpu
          pip install pydub openai-whisper numpy soundfile
          
      - name: Download FFmpeg
        run: |
          Remove-Item -Path ffmpeg -Recurse -Force -ErrorAction SilentlyContinue
          mkdir ffmpeg
          echo "Downloading FFmpeg..."
          Invoke-WebRequest https://github.com/BtbN/FFmpeg-Builds/releases/download/latest/ffmpeg-master-latest-win64-gpl.zip -OutFile ffmpeg.zip
          echo "Extracting FFmpeg..."
          Expand-Archive ffmpeg.zip -DestinationPath .
          echo "Moving FFmpeg files..."
          Move-Item -Force ffmpeg-master-latest-win64-gpl\bin\ffmpeg.exe ffmpeg\
          Move-Item -Force ffmpeg-master-latest-win64-gpl\bin\ffprobe.exe ffmpeg\
          echo "Cleaning up..."
          Remove-Item -Path ffmpeg.zip -Force
          Remove-Item -Path ffmpeg-master-latest-win64-gpl -Recurse -Force
          
      - name: Install NSIS
        shell: pwsh
        run: |
          echo "Downloading NSIS..."
          curl.exe -L "https://netcologne.dl.sourceforge.net/project/nsis/NSIS%203/3.08/nsis-3.08-setup.exe" -o nsis-setup.exe
          
          if (!(Test-Path "nsis-setup.exe")) {
            echo "Download failed, trying alternative URL..."
            curl.exe -L "https://github.com/NSIS-Dev/nsis/releases/download/v3.08/nsis-3.08-setup.exe" -o nsis-setup.exe
          }
          
          echo "Verifying download..."
          if (Test-Path "nsis-setup.exe") {
            echo "Installing NSIS..."
            Start-Process -FilePath .\nsis-setup.exe -ArgumentList '/S' -Wait -NoNewWindow
            echo "Waiting for installation..."
            Start-Sleep -s 15
            
            echo "Verifying installation..."
            if (Test-Path 'C:\Program Files (x86)\NSIS\makensis.exe') {
              echo "NSIS installed successfully"
            } else {
              throw "NSIS installation failed"
            }
          } else {
            throw "Failed to download NSIS"
          }
          
      - name: Build Windows executable
        run: |
          echo "Current directory:"
          pwd
          echo "Directory contents:"
          dir
          echo "Building with PyInstaller..."
          python -m PyInstaller Sound_to_XML.spec --debug all
        
      - name: List directory contents
        run: |
          echo "Dist directory:"
          dir dist
          echo "Build directory:"
          dir build
          
      - name: Create installer
        run: |
          & 'C:\Program Files (x86)\NSIS\makensis.exe' installer.nsi
          
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: "Sound to XML Installer.exe"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 